scalar Datetime

type User {
  id: ID!
  username: String!
  email: String!
  firstName: String!
  lastName: String!
}

type Profile {
  id: ID!
  user: User!
  createdAt: String!
  updatedAt: String!
}

type UserLog {
  id: ID!
  user: User!
  log: String!
  createdAt: Datetime!
}

enum WorkspaceTier {
  BASIC
  STANDARD
  PRO
}

type Workspace {
  id: ID!
  workspaceName: String!
  workspaceTier: WorkspaceTier!
  owner: User!
  members: [Profile!]!
  logs: [UserLog!]!
  createdAt: String!
  updatedAt: String!
}

enum AccountType {
  CHECKING
  SAVING
  CREDIT
  INVESTMENT
  RETIREMENT
  LOAN
  INSURANCE
  MORTGAGE
}

type Account {
  id: ID!
  accountName: String!
  accountType: AccountType!
  currencyCode: String!
  accountBalance: Float!
  workspace: Workspace!
  createdAt: String!
  updatedAt: String!
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
  PAYMENT
}

type Transaction {
  id: ID!
  transactionType: TransactionType!
  transactionAmount: Float!
  currencyCode: String!
  description: String!
  transactionDate: String!
  account: Account!
  createdAt: String!
  updatedAt: String!
}

type Category {
  id: ID!
  categoryName: String!
  categoryDescription: String!
}

type Budget {
  id: ID!
  budgetName: String!
  budgetDescription: String!
  budgetStartDate: String!
  budgetEndDate: String!
  budgetAmount: Float!
  categories: [Category!]!
  createdAt: String!
  updatedAt: String!
}

type Query {
  getAllUsers: [User!]!
  getUserById(id: ID!): User
  getUserByUsername(username: String!): User
  getAllProfiles: [Profile!]!
  getProfileById(id: ID!): Profile
  getAllUserLogs: [UserLog!]!
  getUserLogsByUserId(userId: ID!): [UserLog!]!
  getWorkspaceById(id: ID!): Workspace
  getAccountsByWorkspaceId(workspaceId: ID!): [Account!]!
  getTransactionsByAccountId(accountId: ID!): [Transaction!]!
  getCategoryById(id: ID!): Category
  getBudgetById(id: ID!): Budget
}

type Mutation {
  createUser(
    username: String!
    email: String!
    firstName: String
    lastName: String
  ): User
  updateUser(
    id: ID!
    username: String!
    email: String!
    firstName: String
    lastName: String
  ): User
  deleteUser(id: ID!): Boolean
  createProfile(userId: ID!): Profile
  updateProfile(id: ID!, userId: ID!): Profile
  deleteProfile(id: ID!): Boolean
  createUserLog(userId: ID!, log: String!): UserLog
  updateUserLog(id: ID!, userId: ID!, log: String!): UserLog
  deleteUserLog(id: ID!): Boolean
  createWorkspace(
    workspaceName: String!
    workspaceTier: WorkspaceTier!
    ownerId: ID!
  ): Workspace
  updateWorkspace(
    id: ID!
    workspaceName: String!
    workspaceTier: WorkspaceTier!
  ): Workspace
  deleteWorkspace(id: ID!): Boolean
  addMemberToWorkspace(workspaceId: ID!, profileId: ID!): Workspace
  removeMemberFromWorkspace(workspaceId: ID!, profileId: ID!): Workspace
  createAccount(
    accountName: String!
    accountType: AccountType!
    currencyCode: String!
    accountBalance: Float!
    workspaceId: ID!
  ): Account
  updateAccount(
    id: ID!
    accountName: String!
    accountType: AccountType!
    currencyCode: String!
    accountBalance: Float!
  ): Account
  deleteAccount(id: ID!): Boolean
  createTransaction(
    transactionType: TransactionType!
    transactionAmount: Float!
    currencyCode: String!
    description: String!
    transactionDate: String!
    accountId: ID!
  ): Transaction
  updateTransaction(
    id: ID!
    transactionType: TransactionType!
    transactionAmount: Float!
    currencyCode: String!
    description: String!
    transactionDate: String!
  ): Transaction
  deleteTransaction(id: ID!): Boolean
  createCategory(categoryName: String!, categoryDescription: String!): Category
  updateCategory(
    id: ID!
    categoryName: String!
    categoryDescription: String!
  ): Category
  deleteCategory(id: ID!): Boolean
  createBudget(
    budgetName: String!
    budgetDescription: String!
    budgetStartDate: String!
    budgetEndDate: String!
    budgetAmount: Float!
  ): Budget
  updateBudget(
    id: ID!
    budgetName: String!
    budgetDescription: String!
    budgetStartDate: String!
    budgetEndDate: String!
    budgetAmount: Float!
  ): Budget
  deleteBudget(id: ID!): Boolean
  addCategoryToBudget(budgetId: ID!, categoryId: ID!): Budget
  removeCategoryFromBudget(budgetId: ID!, categoryId: ID!): Budget
}
